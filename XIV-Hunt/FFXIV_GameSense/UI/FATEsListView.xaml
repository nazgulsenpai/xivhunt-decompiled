<UserControl
	x:Class="FFXIV_GameSense.UI.FATEsListView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:properties="clr-namespace:FFXIV_GameSense.Properties" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	Height="auto"
	Width="auto" xmlns:ui="clr-namespace:FFXIV_GameSense.UI">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<xctk:InverseBoolConverter
				x:Key="InverseBoolConverter" />
			<Style
				BasedOn="{StaticResource {x:Type xctk:SelectorItem}}"
				TargetType="{x:Type xctk:SelectorItem}"
				x:Key="{x:Type xctk:SelectorItem}">
				<Setter
					Property="RenderOptions.ClearTypeHint"
					Value="Enabled" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type xctk:SelectorItem}">
							<Grid
								Background="{TemplateBinding Background}">
								<Border
									Name="_background"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<CheckBox
									Margin=".5,0"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
									Foreground="{TemplateBinding Foreground}"
									Padding="{TemplateBinding Padding}"
									IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="true">
									<Setter
										TargetName="_background"
										Property="Background"
										Value="#5D5D5D" />
									<Setter
										TargetName="_background"
										Property="BorderBrush"
										Value="#E5FFF8CB" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ToggleButton}"
				x:Key="CheckComboBoxToggleButton">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="true" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToggleButton}">
							<Grid>
								<Border
									Name="Background"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Grid
									Margin="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="*" />
										<ColumnDefinition
											Width="0"
											MinWidth="{Binding Path=ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" />
									</Grid.ColumnDefinitions>
									<TextBox
										Margin="1"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Background="#00FFFFFF"
										Foreground="{TemplateBinding Foreground}"
										BorderThickness="0"
										Cursor="Arrow"
										Focusable="False"
										HorizontalScrollBarVisibility="Hidden"
										IsReadOnly="True"
										Padding="{TemplateBinding Padding}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										Text="{TemplateBinding Content}"
										VerticalScrollBarVisibility="Hidden" />
									<Grid
										Name="ArrowBackground"
										Column="1"
										Background="#00FFFFFF">
										<Path
											Name="Arrow"
											Width="12"
											Height="6"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="F1 M301.14,-189.041 L311.57,-189.041 L306.355,-182.942 L301.14,-189.041"
											Fill="#FFFFFFFF"
											IsHitTestVisible="false"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											Stretch="Uniform" />
									</Grid>
								</Grid>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsEnabled"
									Value="false">
									<Setter
										TargetName="Arrow"
										Property="Fill"
										Value="#AFAFAF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				BasedOn="{StaticResource {x:Type xctk:CheckComboBox}}"
				TargetType="{x:Type xctk:CheckComboBox}"
				x:Key="{x:Type xctk:CheckComboBox}">
				<Setter
					Property="Foreground"
					Value="{DynamicResource TextBrush}" />
				<Setter
					Property="Background"
					Value="{DynamicResource ControlBackgroundBrush}" />
				<Setter
					Property="BorderBrush"
					Value="{DynamicResource TextBoxBorderBrush}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="VerticalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="Both" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Stretch" />
				<Setter
					Property="FontFamily"
					Value="{DynamicResource ContentFontFamily}" />
				<Setter
					Property="FontSize"
					Value="{DynamicResource ContentFontSize}" />
				<Setter
					Property="UIElement.SnapsToDevicePixels"
					Value="True" />
				<Setter
					Property="Validation.ErrorTemplate"
					Value="{DynamicResource ValidationErrorTemplate}" />
				<Setter
					Property="CanContentScroll"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type xctk:CheckComboBox}">
							<Grid
								Name="MainGrid"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
								<Popup
									Name="PART_Popup"
									AllowsTransparency="true"
									Focusable="False"
									Placement="Bottom"
									PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
									StaysOpen="False"
									IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
									<Grid
										MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
										MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
										<Border
											Name="DropDownBorder"
											Height="Auto"
											Background="#FF313131"
											BorderBrush="#FF778899"
											BorderThickness="{TemplateBinding BorderThickness}"
											Effect="{DynamicResource DropShadowBrush}" />
										<ScrollViewer
											Name="DropDownScrollViewer"
											BorderThickness="0"
											Padding="1">
											<ItemsPresenter
												Name="PART_ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
										</ScrollViewer>
									</Grid>
								</Popup>
								<Border
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ToggleButton
									Name="PART_DropDownButton"
									Margin="0"
									VerticalAlignment="Stretch"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Content="{TemplateBinding xctk:Text}"
									Focusable="False"
									Foreground="{TemplateBinding Foreground}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									Style="{DynamicResource CheckComboBoxToggleButton}"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									IsHitTestVisible="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" />
								<Border
									Name="FocusBorder"
									BorderBrush="{x:Static SystemColors.HighlightBrush}"
									BorderThickness="0,.5,0,.5"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									Visibility="Collapsed"
									Background="{x:Null}" />
								<Border
									Name="DisabledVisualElement"
									Background="{DynamicResource ControlsDisabledBrush}"
									BorderBrush="{DynamicResource ControlsDisabledBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									IsHitTestVisible="False"
									Opacity="0.6"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									Visibility="Collapsed" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="FocusBorder"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
								<Trigger
									Property="UIElement.IsFocused"
									Value="True">
									<Setter
										TargetName="FocusBorder"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
								<Trigger
									Property="UIElement.IsKeyboardFocusWithin"
									Value="True">
									<Setter
										TargetName="FocusBorder"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="DisabledVisualElement"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Grid
		SizeChanged="Grid_SizeChanged">
		<Grid
			Height="30"
			VerticalAlignment="Top">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width=".66*" />
				<ColumnDefinition
					Width=".33*" />
			</Grid.ColumnDefinitions>
			<TextBox
				Name="FilterTextBox"
				Grid.Column="0"
				HorizontalAlignment="Left"
				Foreground="#FFEEEEEE"
				Background="#FF313131"
				MinHeight="25"
				Height="25"
				Width="250"
				VerticalAlignment="Top"
				Panel.ZIndex="0"
				GotFocus="FilterTextBox_GotFocus"
				LostFocus="FilterTextBox_LostFocus"
				TextChanged="FilterTextBox_TextChanged" />
			<TextBlock
				Name="FilterCoverTextBlock"
				Grid.Column="0"
				Text="{x:Static properties:Resources.FormSearchCoverText}"
				MaxWidth="100"
				Margin="5,3,0,0"
				IsHitTestVisible="False"
				Foreground="#FFEEEEEE"
				Background="#00FFFFFF"
				VerticalAlignment="Top"
				FontStyle="Italic"
				HorizontalAlignment="Left"
				Panel.ZIndex="1"
				Width="{Binding Path=ActualWidth, ElementName=FilterTextBox}" />
			<TextBlock
				Name="SelectedFateCountTextBlock"
				Grid.Column="0"
				Text="{x:Static properties:Resources.FormFATESingle}"
				Margin="0,5,5,0"
				Width="Auto"
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				Panel.ZIndex="-1"
				SizeChanged="SelectedFateCountTextBlock_SizeChanged" />
			<xctk:CheckComboBox
				Name="PresetCheckComboBox"
				Grid.Column="1"
				Height="25"
				VerticalAlignment="Top"
				DisplayMemberPath="Name"
				Background="#FF313131"
				Foreground="#FFFFFFFF"
				ToolTip="{x:Static properties:Resources.FormFATEPresets}" />
		</Grid>
		<ListView
			Name="ListView"
			HorizontalContentAlignment="Left"
			Background="#FF313131"
			SelectionMode="Extended"
			Margin="0,30,0,0"
			ItemsSource="{Binding}"
			ButtonBase.Click="FATEsListView_GridViewColumnHeaderClick">
			<ItemsControl.ItemContainerStyle>
				<Style
					TargetType="{x:Type ListViewItem}">
					<Setter
						Property="HorizontalContentAlignment"
						Value="Stretch" />
					<Setter
						Property="Margin"
						Value="2" />
					<Style.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								Property="Background"
								Value="#FF404040" />
							<Setter
								Property="BorderBrush"
								Value="#E5FFF8CB" />
						</Trigger>
						<Trigger
							Property="ListBoxItem.IsSelected"
							Value="True">
							<Setter
								Property="Background"
								Value="#FF404040" />
							<Setter
								Property="BorderBrush"
								Value="#00000000" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</ItemsControl.ItemContainerStyle>
			<FrameworkElement.Resources>
				<ResourceDictionary>
					<Style
						TargetType="{x:Type Thumb}"
						x:Key="GridViewColumnHeaderGripper">
						<Setter
							Property="Width"
							Value="18" />
						<Setter
							Property="Background">
							<Setter.Value>
								<LinearGradientBrush
									StartPoint="0,0"
									EndPoint="0,1">
									<GradientBrush.GradientStops>
										<GradientStopCollection>
											<GradientStop
												Color="{DynamicResource BorderLightColor}"
												Offset="0.0" />
											<GradientStop
												Color="{DynamicResource BorderDarkColor}"
												Offset="1.0" />
										</GradientStopCollection>
									</GradientBrush.GradientStops>
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
						<Setter
							Property="Template">
							<Setter.Value>
								<ControlTemplate
									TargetType="{x:Type Thumb}">
									<Border
										Padding="{TemplateBinding Padding}"
										Background="#00FFFFFF">
										<Rectangle
											HorizontalAlignment="Center"
											Width="1"
											Fill="{TemplateBinding Background}" />
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter
							Property="BorderBrush">
							<Setter.Value>
								<LinearGradientBrush
									EndPoint="0.5,1"
									StartPoint="0.5,0">
									<GradientStop
										Color="Black"
										Offset="0" />
									<GradientStop
										Color="White"
										Offset="1" />
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
					</Style>
					<Style
						TargetType="{x:Type GridViewColumnHeader}"
						x:Key="headercells">
						<Setter
							Property="Foreground"
							Value="#FFFFFFFF" />
						<Setter
							Property="BorderBrush"
							Value="#5D5D5D" />
						<Setter
							Property="Background">
							<Setter.Value>
								<LinearGradientBrush
									StartPoint="0,0"
									EndPoint="0,1">
									<GradientStop
										Color="#5D5D5D"
										Offset="0" />
									<GradientStop
										Color="#5D5D5D"
										Offset="0.5" />
									<GradientStop
										Color="#3C3C3C"
										Offset="0.5" />
									<GradientStop
										Color="#3C3C3C"
										Offset="1" />
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger
								Property="UIElement.IsMouseOver"
								Value="True">
								<Setter
									Property="Template">
									<Setter.Value>
										<ControlTemplate
											TargetType="{x:Type GridViewColumnHeader}">
											<Grid>
												<Border
													BorderThickness="1">
													<TextBlock
														Text="{TemplateBinding Content}"
														TextAlignment="Center">
														<TextBlock.Background>
															<LinearGradientBrush
																StartPoint="0,0"
																EndPoint="0,1">
																<GradientStop
																	Color="#6D6D6D"
																	Offset="0" />
																<GradientStop
																	Color="#6D6D6D"
																	Offset="0.5" />
																<GradientStop
																	Color="#4C4C4C"
																	Offset="0.5" />
																<GradientStop
																	Color="#4C4C4C"
																	Offset="1" />
															</LinearGradientBrush>
														</TextBlock.Background>
													</TextBlock>
												</Border>
												<Thumb
													Name="PART_HeaderGripper"
													HorizontalAlignment="Right"
													Margin="0,0,-9,0"
													Style="{StaticResource GridViewColumnHeaderGripper}" />
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
								<Setter
									Property="UIElement.IsHitTestVisible"
									Value="True" />
								<Setter
									Property="HorizontalContentAlignment"
									Value="Left" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</ResourceDictionary>
			</FrameworkElement.Resources>
			<ListView.View>
				<GridView
					ColumnHeaderContainerStyle="{StaticResource headercells}">
					<GridViewColumn>
						<GridViewColumn.Header>
							<GridViewColumnHeader
								Content="{x:Static properties:Resources.FATEListViewAnnounce}"
								Tag="Announce" />
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<!--Unknown connection ID: 7-->
								<CheckBox
									HorizontalAlignment="Center"
									IsChecked="{Binding Announce, Mode=TwoWay}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn>
						<GridViewColumn.Header>
							<GridViewColumnHeader
								Content="{x:Static properties:Resources.FATEListViewLevel}"
								Tag="ClassJobLevel" />
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock
									Foreground="#FFEEEEEE"
									TextAlignment="Center"
									Text="{Binding ClassJobLevel}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn>
						<GridViewColumn.Header>
							<GridViewColumnHeader
								Content="{x:Static properties:Resources.FATEListViewIcon}"
								Tag="Icon" />
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Image
									Margin="0,-4,0,-4"
									Width="24"
									Height="24"
									Source="{Binding Icon}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn>
						<GridViewColumn.Header>
							<GridViewColumnHeader
								Content="{x:Static properties:Resources.FATEListViewName}"
								Tag="Name" />
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock
									Foreground="#FFEEEEEE"
									Text="{Binding Name}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn
						Width="170">
						<GridViewColumn.Header>
							<GridViewColumnHeader
								Content="{x:Static properties:Resources.FATEListViewZones}"
								Tag="Zones" />
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock
									Foreground="#FFEEEEEE"
									Text="{Binding Zones}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</ListView.View>
		</ListView>
	</Grid>
</UserControl>
